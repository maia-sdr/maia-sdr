name: 'plutosdr-fw'
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-fw:
    name: Build Pluto SDR firmware
    runs-on: [self-hosted, vivado]
    container:
      image: ghcr.io/maia-sdr/maia-sdr-devel:latest
      volumes:
        - vivado2022_2:/opt/Xilinx
      options: --user root
    steps:
    - name: Checkout plutosdr-fw
      uses: actions/checkout@v4
      with:
        repository: maia-sdr/plutosdr-fw
        submodules: recursive
    - name: Remove maia-sdr submodule
      run: rm -rf maia-sdr
    - name: Checkout maia-sdr
      uses: actions/checkout@v4
      with:
        path: maia-sdr
        # need to fetch history to get the latest tag with git describe
        fetch-depth: 0
        submodules: recursive
    - name: Build firmware
      # xsct, which is run by the make process, uses Xvfb, which usually needs a
      # connection to an X server (even though it is a CLI application). We run
      # Xvfb in the container to create a "fake" X session that makes xsct
      # happy.
      #
      # We cannot '.' the main settings.sh file for Vivado, because it uses
      # 'source' to run the sub-files, and we are not using bash. Instead, we
      # '.' each individual sub-file.
      #
      # ADI_IGNORE_VERSION_CHECK is required because we use Vivado 2022.2.2
      # instead of 2022.2.
      run: |
        . /opt/Xilinx/Vitis/2022.2/.settings64-Vitis.sh
        . /opt/Xilinx/Vivado/2022.2/.settings64-Vivado.sh
        . /opt/Xilinx/Vitis_HLS/2022.2/.settings64-Vitis_HLS.sh
        . /opt/rust/env
        export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin/:/usr/bin:/sbin:/bin:$PATH:/opt/oss-cad-suite/bin
        export PYTHONPATH=/usr/local/lib/python3.10/dist-packages
        apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install -y xvfb
        Xvfb :10 &
        export DISPLAY=:10
        export ADI_IGNORE_VERSION_CHECK=1
        make
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pluto-firmware
        path: |
          build/pluto.dfu
          build/pluto.frm
        if-no-files-found: error
    # The working directory in the self-hosted runner needs be cleaned before
    # building. We use if: ${{ always() }} to clean even if the build fails.
    - name: Clean up runner working dir
      uses: TooMuch4U/actions-clean@v2.1
      if: ${{ always() }}
